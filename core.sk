on join:
    set join message to "&3%player%&3 joined."
    wait 1 tick
    stop if player is not online
    set metadata "state" of player to "lobby"
    clean(player)
    while player is online:
        if y-coord of player < 1:
            if metadata "state" of player is "straight":
                reset_straight(player)
            if metadata "state" of player is "clutch":
                reset_clutch(player)
            else if metadata "state" of player is "water":
                send "&4&lGENRES &8| &7You &cfailed&7."
                reset_water(player)
            else if metadata "state" of player is "tnt":
                send "&4&lGENRES &8| &7You &cfailed&7."
                reset_tnt(player)
            else if metadata "state" of player is "diagonal":
                reset_diagonal(player)
            else if metadata "state" of player is "stick":
                safeTeleport(player, {loc.%player%})
                remove 1 from {lives.%player%}
                if {lives.%player%} < 1:
                    quit(player)
            else if metadata "state" of player is "pearl":
                clean(player)
                give_pearl(player)
                safeTeleport(player, {loc.%player%})
                remove 1 from {lives.%player%}
                if {lives.%player%} < 1:
                    quit(player)
            else if metadata "state" of player is "sumo":
                quit(player)
        wait 1 second

on quit:
    set quit message to "&3%player%&3 quit."

on quit:
    quit(player)

on right click:
    if line 1 of clicked block is "[Game]":
        set {_game} to line 2 of clicked block
        make player execute command "join %{_game}%"
    if line 1 of clicked block is "[Quit]" or "[Leave]":
        make player execute command "leave"

on flow:
    event-block is water
    cancel event

on tab complete:
	if event-string is "/skript" or "/sk":
		set tab completions for position 1 to "reload", "enable", "disable", "update" and "help"
		set tab completions for position 2 to all scripts
	if event-string is "/join" or "/play":
		set tab completions for position 1 to "straight", "clutch", "water", "tnt", "diagonal", "stick", "pearl", "sumo", and "classic"
		set tab completions for position 2 to all players
	if event-string is "/loc":
		set tab completions for position 1 to all players
	if event-string is "/spectate" or "/spec":
		set tab completions for position 1 to all players
	if event-string is "/boop":
		set tab completions for position 1 to all players

on walk on gold block:
    if metadata "state" of player is "straight":
        set {_time} to {time.%player%}
        broadcast "&4&lGENRES &8| &c%player%&7 beat straight bridging in &c%difference between now and {_time}%&7."
        reset_straight(player)
    if metadata "state" of player is "clutch":
        set {_time} to {time.%player%}
        broadcast "&4&lGENRES &8| &c%player%&7 beat clutch map in &c%difference between now and {_time}%&7."
        reset_clutch(player)
    if metadata "state" of player is "water":
        if block at player is water:
            send "&4&lGENRES &8| &7You were &asucessful&7."
        else:
            send "&4&lGENRES &8| &7You &cfailed&7."
        set block at player to air
        reset_water(player)
    if metadata "state" of player is "tnt":
        set {_dist} to (x-coord of player) - 9
        send "&4&lGENRES &8| &7You made it &c%{_dist}%&7 blocks."
        reset_tnt(player)
    if metadata "state" of player is "diagonal":
        set {_time} to {time.%player%}
        broadcast "&4&lGENRES &8| &c%player%&7 beat diagonal bridging in &c%difference between now and {_time}%&7."
        reset_diagonal(player)

on hunger meter change:
    cancel event

on break:
    if metadata "state" of player is "straight":
        cancel event
    if metadata "state" of player is "clutch":
        cancel event
    if metadata "state" of player is "water":
        cancel event
    if metadata "state" of player is "tnt":
        cancel event
    if metadata "state" of player is "diagonal":
        cancel event
    if metadata "state" of player is "stick":
        cancel event
    if metadata "state" of player is "sumo":
        cancel event
    if metadata "state" of player is "pearl":
        cancel event
    if metadata "state" of player is "classic":
        cancel event
	

on place:
    if metadata "state" of player is "straight":
        add event-block's location to {-cleanup.%player%::*}
    if metadata "state" of player is "clutch":
        if y-coord of event-block > 5:
            cancel event
            send "&4&lGENRES &8| &7You cannot place blocks here."
        else:
            wait 2 seconds
            set event-block to air
    if metadata "state" of player is "diagonal":
        add event-block's location to {-cleanup.%player%::*}
    if metadata "state" of player is "stick":
        wait 3 seconds
        set event-block to air
    if metadata "state" of player is "water":
        if block below event-block is not gold block:
            cancel event
    if metadata "state" of player is "tnt":
        if event-block is tnt:
            set event-block to air
            spawn primed tnt at event-block's location
    if metadata "state" of player is "pearl":
        wait 3 seconds
        set event-block to air

on explode:
    cancel event

on damage:
    if damage cause is attack:
        if metadata "state" of victim is "stick":
            heal victim
        if metadata "state" of victim is "sumo":
            heal victim
        if metadata "state" of victim is "classic":
            if final damage >= victim's health:
                cancel event
                quit(victim)
        if metadata "state" of victim is "pearl":
            heal victim
    if damage cause is fall:
        cancel event
    if damage cause is entity explosion:
        cancel event
        push victim upwards at speed 1
        push victim forwards at speed 1

on world change:
    world is "world"
    if metadata "state" of player is "spec":
        quit(player)

on chat:
    if event is not canceled:
        set {_color} to "&7"
        set {_color} to "&c" if player is op
        set chat format to "%{_color}%%player%&f: %message%"

command /loc <player>:
    usage: &cUsage: /loc <player>
    trigger:
        set {_game} to metadata "state" of arg-1
        send "&4&lGENRES &8| &c%arg-1%&7 is playing game with id &c%{_game}%&7."


command /join <text> [<player=%player%>]:
    aliases: /play
    usage: &cUsage: /join <game> [player]
    cooldown: 2 seconds
    cooldown message: &cThis command has a 2 second cooldown.
    cooldown bypass: bypass
    trigger:
        if player is not arg-2:
            if player is not op:
                send "&4&lGENRES &8| &7You cannot send others to a game."
        if inLobby(arg-2) is true:
            if arg-1 is "straight":
                clean(arg-2)
                set metadata "state" of arg-2 to "straight"
                cloneWorld("straight", "%arg-2%")
                reset_straight(arg-2)
                while metadata "state" of arg-2 is "straight":
                    set {_time} to {time.%arg-2%}
                    send action bar "&7Time: &c%difference between now and {_time}%" to arg-2
                    wait 2 ticks
            if arg-1 is "clutch":
                clean(arg-2)
                set metadata "state" of arg-2 to "clutch"
                cloneWorld("clutch", "%arg-2%")
                reset_clutch(arg-2)
                while metadata "state" of arg-2 is "clutch":
                    set {_time} to {time.%arg-2%}
                    send action bar "&7Time: &c%difference between now and {_time}%" to arg-2
                    wait 2 ticks
            else if arg-1 is "water":
                clean(arg-2)
                set metadata "state" of arg-2 to "water"
                cloneWorld("water", "%arg-2%")
                reset_water(arg-2)
            else if arg-1 is "tnt":
                clean(arg-2)
                set metadata "state" of arg-2 to "tnt"
                cloneWorld("tnt", "%arg-2%")
                reset_tnt(arg-2)
            else if arg-1 is "diagonal":
                clean(arg-2)
                set metadata "state" of arg-2 to "diagonal"
                cloneWorld("diag", "%arg-2%")
                reset_diagonal(arg-2)
                while metadata "state" of arg-2 is "diagonal":
                    set {_time} to {time.%arg-2%}
                    send action bar "&7Time: &c%difference between now and {_time}%" to arg-2
                    wait 2 ticks
            else if arg-1 is "stick":
                clean(arg-2)
                set metadata "state" of arg-2 to "queued"
                send "&4&lGENRES &8| &7Joined queue for &cstick&7." to arg-2
                add arg-2 to {-queue.stick::*}
                if (size of {-queue.stick::*}) > 1:
                    stick({-queue.stick::1}, {-queue.stick::2})
            else if arg-1 is "pearl":
                clean(arg-2)
                set metadata "state" of arg-2 to "queued"
                send "&4&lGENRES &8| &7Joined queue for &cpearl&7." to arg-2 
                add arg-2 to {-queue.pearl::*}
                if (size of {-queue.pearl::*}) > 1:
                    pearl({-queue.pearl::1}, {-queue.pearl::2})
            else if arg-1 is "sumo":
                clean(arg-2)
                set metadata "state" of arg-2 to "queued"
                send "&4&lGENRES &8| &7Joined queue for &csumo&7." to arg-2 
                add arg-2 to {-queue.sumo::*}
                if (size of {-queue.sumo::*}) > 2:
                    sumo({-queue.sumo::1}, {-queue.sumo::2})
            else if arg-1 is "classic":
                clean(arg-2)
                set metadata "state" of arg-2 to "queued"
                send "&4&lGENRES &8| &7Joined queue for &cclassic&7." to arg-2 
                add arg-2 to {-queue.classic::*}
                if (size of {-queue.classic::*}) > 1:
                    classic({-queue.classic::1}, {-queue.classic::2})
            else:
                send "&cDid not recognize gamemode."
                
command /leave [<player=%player%>]:
    aliases: /l
    trigger:
        if player is not arg-1:
            if player is not op:
                send "&4&lGENRES &8| &7You cannot send others to a game."
        quit(arg-1)

command /spectate <player>:
    aliases: /spec
    trigger:
        if player is not arg-1:
            if inLobby(player) is true:
                if metadata "state" of arg-1 is not "lobby" or "queued":
                    set metadata "state" of player to "spec"
                    teleport player to arg-1
                    send "&4&lGENRES &8| &c%player%&7 has started spectating you." to arg-1
                    set player's gamemode to spectator
                else:
                    send "&4&lGENRES &8| &c%arg-1%&7 is not in a game."
        else:
            send "&4&lGENRES &8| &7You cannot spectate yourself."

command /boop <player>:
    usage: &cUsage: /boop <player>
    cooldown: 60 seconds
    cooldown message: &cThis command has a 60 second cooldown.
    cooldown bypass: bypass
    trigger:
        send "&d&lBOOP! &7You booped &f%arg-1%&7." to player
        send "&d&lBOOP! &7You were booped by &f%player%&7." to arg-1
        playSound(arg-1, "block.note_block.pling")
